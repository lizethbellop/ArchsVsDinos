//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ArchsVsDinosClient.ChatManager {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChatResultCode", Namespace="http://schemas.datacontract.org/2004/07/Contracts.DTO.Result_Codes")]
    public enum ChatResultCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Chat_UserConnected = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Chat_UserDisconnected = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Chat_UserAlreadyConnected = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Chat_ConnectionError = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ChatManager.IChatManager", CallbackContract=typeof(ArchsVsDinosClient.ChatManager.IChatManagerCallback))]
    public interface IChatManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatManager/Connect", ReplyAction="http://tempuri.org/IChatManager/ConnectResponse")]
        ArchsVsDinosClient.ChatManager.ChatResultCode Connect(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatManager/Connect", ReplyAction="http://tempuri.org/IChatManager/ConnectResponse")]
        System.Threading.Tasks.Task<ArchsVsDinosClient.ChatManager.ChatResultCode> ConnectAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/Disconnect")]
        void Disconnect(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/Disconnect")]
        System.Threading.Tasks.Task DisconnectAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/SendMessageToRoom")]
        void SendMessageToRoom(string message, string username);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/SendMessageToRoom")]
        System.Threading.Tasks.Task SendMessageToRoomAsync(string message, string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/ReceiveMessage")]
        void ReceiveMessage(string roomId, string fromUser, string message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/ReceiveSystemNotification")]
        void ReceiveSystemNotification(ArchsVsDinosClient.ChatManager.ChatResultCode code, string notification);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/UpdateUserList")]
        void UpdateUserList(string[] users);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatManagerChannel : ArchsVsDinosClient.ChatManager.IChatManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatManagerClient : System.ServiceModel.DuplexClientBase<ArchsVsDinosClient.ChatManager.IChatManager>, ArchsVsDinosClient.ChatManager.IChatManager {
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public ArchsVsDinosClient.ChatManager.ChatResultCode Connect(string username) {
            return base.Channel.Connect(username);
        }
        
        public System.Threading.Tasks.Task<ArchsVsDinosClient.ChatManager.ChatResultCode> ConnectAsync(string username) {
            return base.Channel.ConnectAsync(username);
        }
        
        public void Disconnect(string username) {
            base.Channel.Disconnect(username);
        }
        
        public System.Threading.Tasks.Task DisconnectAsync(string username) {
            return base.Channel.DisconnectAsync(username);
        }
        
        public void SendMessageToRoom(string message, string username) {
            base.Channel.SendMessageToRoom(message, username);
        }
        
        public System.Threading.Tasks.Task SendMessageToRoomAsync(string message, string username) {
            return base.Channel.SendMessageToRoomAsync(message, username);
        }
    }
}
